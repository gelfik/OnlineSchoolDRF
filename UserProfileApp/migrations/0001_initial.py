# Generated by Django 3.2.4 on 2021-06-18 15:59

import UserProfileApp.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserAvatar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, unique=True, upload_to=UserProfileApp.models.UserAvatar.get_file_path, verbose_name='Файл')),
                ('name', models.CharField(default='<function UserAvatar.get_file_path at 0x00000205A3DC7AF0>', max_length=255, verbose_name='Название')),
                ('link', models.CharField(default='<function UserAvatar.get_file_path at 0x00000205A3DC7AF0>', max_length=255, verbose_name='Ссылка')),
                ('upload_date', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Дата загрузки')),
                ('size', models.IntegerField(default=0, verbose_name='Размер')),
                ('is_active', models.BooleanField(default=True, verbose_name='Статус удаления')),
            ],
            options={
                'verbose_name': 'Аватар',
                'verbose_name_plural': 'Аватары',
                'db_table': 'UserAvatar',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(db_index=True, max_length=255, unique=True)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_name', models.CharField(default=None, max_length=255, null=True)),
                ('first_name', models.CharField(default=None, max_length=255, null=True)),
                ('patronymic', models.CharField(default=None, max_length=255, null=True)),
                ('avatar_id', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='UserProfileApp.useravatar', verbose_name='Аватар')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
